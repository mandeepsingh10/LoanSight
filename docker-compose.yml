services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5009:5000"
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - DATABASE_URL=${DATABASE_URL:?DATABASE_URL is required}
      - PGHOST=${PGHOST:?PGHOST is required}
      - PGPORT=${PGPORT:?PGPORT is required}
      - PGUSER=${PGUSER:?PGUSER is required}
      - PGPASSWORD=${PGPASSWORD:?PGPASSWORD is required}
      - PGDATABASE=${PGDATABASE:?PGDATABASE is required}
      - SESSION_SECRET=${SESSION_SECRET:?SESSION_SECRET is required}
      - DEFAULT_ADMIN_USERNAME=${DEFAULT_ADMIN_USERNAME:?DEFAULT_ADMIN_USERNAME is required}
      - DEFAULT_ADMIN_PASSWORD=${DEFAULT_ADMIN_PASSWORD:?DEFAULT_ADMIN_PASSWORD is required}
      - DEFAULT_ADMIN_EMAIL=${DEFAULT_ADMIN_EMAIL:?DEFAULT_ADMIN_EMAIL is required}
      - DEFAULT_VIEWER_USERNAME=${DEFAULT_VIEWER_USERNAME:?DEFAULT_VIEWER_USERNAME is required}
      - DEFAULT_VIEWER_PASSWORD=${DEFAULT_VIEWER_PASSWORD:?DEFAULT_VIEWER_PASSWORD is required}
      - DEFAULT_VIEWER_EMAIL=${DEFAULT_VIEWER_EMAIL:?DEFAULT_VIEWER_EMAIL is required}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
      - /app/node_modules
    command: sh -c "npm run db:push && npm run dev"

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${PGDATABASE:?PGDATABASE is required}
      - POSTGRES_USER=${PGUSER:?PGUSER is required}
      - POSTGRES_PASSWORD=${PGPASSWORD:?PGPASSWORD is required}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U loansight -d loansight"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: